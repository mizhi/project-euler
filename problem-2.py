#!/usr/bin/env python

# Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
#
# 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
#
# Find the sum of all the even-valued terms in the sequence which do not exceed four million.

# returns the 
def fibseq(n, fibs=[0,1]):
    while len(fibs) <= n:
        fibs.append(fibs[-1] + fibs[-2])
    return fibs[:n+1]

def fib(n):
    return fibseq(n)[n]


n=25
while fib(n) < 4000000:
    n += 1

print n, fib(n)

even_below_4mill=[x for x in fibseq(n-1) if x % 2 == 0]

print sum(even_below_4mill)
